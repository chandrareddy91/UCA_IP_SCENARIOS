<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jms 
                           http://www.springframework.org/schema/jms/spring-jms.xsd">

    <!-- ########################### -->
    <!-- #    Events management    # -->
    <!-- ########################### -->

    <!-- DB Accessor for Events, used to store any Basic event (column-less), mainly for JUnit tests -->
    <bean id="eventDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
        <property name="mapperInterface" value="com.hp.uca.expert.event.store.EventDao" />
    </bean>

    <!-- Define dbStateForwarder => Store State Transitions in DB (eventDao is injected for tests !) -->
    <bean id="dbStateForwarder" class="com.hp.uca.expert.event.JDBCEventForwarder" init-method="start">
        <property name="eventDao" ref="eventDao" />
        <property name="store" ref="dbStore" />
    </bean>

    <!-- Define dbEventNotifier => Read Events in DB (not needed) -->
    <!-- <bean id="dbStateNotifier" class="com.hp.uca.expert.event.store.EventNotifier" scope="singleton"> -->
    <!--     <property name="eventDao" ref="eventDao" /> -->
    <!--     <property name="checkTimer" value="1000" /> -->
    <!-- </bean> -->

</beans>                          
                                                 