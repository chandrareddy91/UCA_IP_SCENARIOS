<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- See documentation @ http://mybatis.github.io/mybatis-3/sqlmap-xml.html -->

<mapper namespace="com.hp.uca.expert.event.store.EventDao">
	<resultMap id="eventsMap" type="com.hp.uca.expert.event.store.StoredEvent" >
	</resultMap>
    
    <update id="createStore" parameterType="com.hp.uca.expert.store.sql.SqlStore">
    	CREATE TABLE 
    		<if test="supportsIfNotExist">
    		IF NOT EXISTS
    		</if>
    		EVENTS (
    		<choose>
    		<when test="name != null and name.equals('sqlite')">
    			ID INTEGER PRIMARY KEY,
    		</when>
    		<when test="name != null and ( name.equals('hsqldb') or name.equals('h2') )">
              	ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1) NOT NULL PRIMARY KEY,
    		</when>
    		<otherwise>
    		</otherwise>
    		</choose>
                identifier VARCHAR(100),
			    insertionTime ${bigInt},
			    eventClass VARCHAR(100),
			    <choose>
			    <when test="supportsUnlimitedVarChar">event VARCHAR</when>
			    <otherwise>event VARCHAR(5000)</otherwise>
			    </choose>
                );
    </update>
    
    <update id="createIndexes">
    	CREATE INDEX TIMES on EVENTS (insertionTime)
    </update>

    <delete id="clearAll">
    	DELETE FROM EVENTS
    </delete>
    
    <delete id="deleteStore">
    	DROP TABLE EVENTS
    </delete>

	<select id="getEvents" resultMap="eventsMap" >
		SELECT
			*    	
		FROM
			EVENTS
		WHERE insertionTime <![CDATA[ <> ]]> 0
		AND (insertionTime >= #{since})
	</select>
	
	<select id="getEventsMarkedAsDeleted" resultMap="eventsMap" >
		SELECT
			*    	
		FROM
			EVENTS
		WHERE
			insertionTime = 0
	</select>
	
	
	<select id="getEvent" resultMap="eventsMap" >
		SELECT
			*    	
		FROM
			EVENTS
		WHERE
			identifier = #{identifier}
			AND 
			insertionTime <![CDATA[ <> ]]> 0
	</select>
	
	<insert id="storeEvent" parameterType="EventCreationMapper">
		INSERT INTO	EVENTS
			(
			identifier,
			insertionTime,
			eventClass,
			event
			)
		VALUES
			(
			#{event.identifier},
			#{insertionTime},
			#{eventClass},
			#{event,typeHandler=com.hp.uca.expert.store.sql.BasicEventTypeHandler}
			)
	</insert>
	
	<delete id="removeEvent">
		DELETE FROM EVENTS
		WHERE identifier = #{identifier}
	</delete>
	
	<delete id="removeEvents">
		DELETE FROM EVENTS
		WHERE 
			insertionTime = 0
	</delete>
	
</mapper>